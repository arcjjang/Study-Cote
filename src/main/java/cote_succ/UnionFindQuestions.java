package cote_succ;

public interface UnionFindQuestions {
    // 집합과 상호배타적 집합의 개념
    class TreeQuestionMain_10_01 {
        // 상호배타적 집합 : 교집합이 없는 집합 관계
    }

    // 집합의 연산
    class TreeQuestionMain_10_02 {
        // 배열을 활용한 트리로 집합 표현하기
        // 대표 원소 = 루트 노드
        // 배열의 인덱스는 자신을, 배열값은 부모 노드를 의미한다.

        // 유니온-파인드 알고리즘
        // 파인드 연산 : 특정 노드의 루트 노드가 무엇인지 탐색하는 방법
        // 경로 압축은 집합을 구성하는 트리를 평평하게(flatten) 만들어서 찾기 연산을 효율적으로 할 수 있게 함
        // 합치기 연산 : 두 집합을 루트 노드 기준으로 하나로 합치는 연산
        // 1. 주어진 두 노드의 루트 노드를 찾기 연산을 통해 찾음
        // 2. 각 노드가 속한 집합을 합침. 두 집합의 루트 노드를 같게 하는 것, 두 집합 중 어떤 루트 노드로 해도 상관 없음
        // 유니온-파인트 알고리즘을 활용해야 하는 시나리오
        // - 조건 : 여러 개의 그룹이 형성되어 있음
        // - 문제 : 특정 원소가 주어졌을 때, 이 원소들이 같은 그룹인지 판단해야 할 경우
    }
}
